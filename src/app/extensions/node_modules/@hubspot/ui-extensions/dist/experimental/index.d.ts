import type * as types from '../types';
/** @experimental This component is experimental. Avoid using it in production due to potential breaking changes. Your feedback is valuable for improvements. Stay tuned for updates. */
declare const Tooltip: "Tooltip" & {
    readonly type?: "Tooltip" | undefined;
    readonly props?: types.TooltipProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Tooltip", types.TooltipProps, true>>;
/** @experimental This component is experimental. Avoid using it in production due to potential breaking changes. Your feedback is valuable for improvements. Stay tuned for updates. */
declare const Slider: "Slider" & {
    readonly type?: "Slider" | undefined;
    readonly props?: types.SliderProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Slider", types.SliderProps, true>>;
/** @experimental This component is experimental. Avoid using it in production due to potential breaking changes. Your feedback is valuable for improvements. Stay tuned for updates. */
declare const Iframe: "Iframe" & {
    readonly type?: "Iframe" | undefined;
    readonly props?: types.IframeProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/types").RemoteComponentType<"Iframe", types.IframeProps, true>>;
export { Tooltip, Slider, Iframe };
